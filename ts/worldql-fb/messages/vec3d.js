"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
exports.__esModule = true;
exports.Vec3dT = exports.Vec3d = void 0;
var Vec3d = /** @class */ (function () {
    function Vec3d() {
        this.bb = null;
        this.bb_pos = 0;
    }
    Vec3d.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    Vec3d.prototype.x = function () {
        return this.bb.readFloat64(this.bb_pos);
    };
    Vec3d.prototype.y = function () {
        return this.bb.readFloat64(this.bb_pos + 8);
    };
    Vec3d.prototype.z = function () {
        return this.bb.readFloat64(this.bb_pos + 16);
    };
    Vec3d.sizeOf = function () {
        return 24;
    };
    Vec3d.createVec3d = function (builder, x, y, z) {
        builder.prep(8, 24);
        builder.writeFloat64(z);
        builder.writeFloat64(y);
        builder.writeFloat64(x);
        return builder.offset();
    };
    Vec3d.prototype.unpack = function () {
        return new Vec3dT(this.x(), this.y(), this.z());
    };
    Vec3d.prototype.unpackTo = function (_o) {
        _o.x = this.x();
        _o.y = this.y();
        _o.z = this.z();
    };
    return Vec3d;
}());
exports.Vec3d = Vec3d;
var Vec3dT = /** @class */ (function () {
    function Vec3dT(x, y, z) {
        if (x === void 0) { x = 0.0; }
        if (y === void 0) { y = 0.0; }
        if (z === void 0) { z = 0.0; }
        this.x = x;
        this.y = y;
        this.z = z;
    }
    Vec3dT.prototype.pack = function (builder) {
        return Vec3d.createVec3d(builder, this.x, this.y, this.z);
    };
    return Vec3dT;
}());
exports.Vec3dT = Vec3dT;
